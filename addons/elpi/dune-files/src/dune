(library
 (name elpi_plugin_lib)
 (public_name coq-elpi.plugin)
 (flags :standard -rectypes)
 (libraries elpi coq-core.vernac coq-core.plugins.ltac))

(coq.pp (modules coq_elpi_vernacular_syntax coq_elpi_arg_syntax))

(rule
 (targets coq_elpi_builtins_HOAS.ml)
 (deps ../elpi/coq-HOAS.elpi ../Makefile ../Makefile.coq.local ../_CoqProject)
 (action
  (run make -C .. src/coq_elpi_builtins_HOAS.ml)))

(install
 (section lib_root)
 (package coq-elpi)
 (files (elpi_plugin.cmxs as coq/user-contrib/elpi/elpi_plugin.cmxs)))

;
; These are hacks because Dune's `library` does not support `-linkpkg`,
; which is an ocamlfind feature.
; https://discuss.ocaml.org/t/dune-problems-using-dynlink-plugins/2874/6
;
(rule
    (targets elpi_plugin.cmxs)
    (package coq-elpi)
    (deps elpi_plugin_lib.cmxa)
    (action (run ocamlfind ocamlopt -shared -linkpkg -linkall -dontlink unix
              -package elpi
			  %{deps}
			  -o %{targets}
    )))

; For waCoq, to avoid multiple load of modules that are already linked (pretty messy)
(rule
    (targets elpi_plugin.cma)
    (deps elpi_plugin_lib.cma)
    (action (run ocamlfind ocamlc -linkpkg -a -dontlink unix,result,ppx_deriving.runtime
              -package elpi
			  %{deps}
			  -o %{targets}
    )))

